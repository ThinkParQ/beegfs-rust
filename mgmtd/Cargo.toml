[package]
name = "mgmtd"
description = "BeeGFS management node Rust prototype"
readme = "README.md"
version.workspace = true
license.workspace = true
edition.workspace = true
authors.workspace = true
documentation.workspace = true
homepage.workspace = true
publish.workspace = true

[build-dependencies]
sqlite = { path = "../sqlite" }

[dependencies]
shared = { path = "../shared", features = ["protobuf"]}
protobuf = { workspace = true }
sqlite = { path = "../sqlite" }
sqlite_check = { path = "../sqlite_check"}

anyhow = { workspace = true }
clap = { workspace = true, features = ["derive"] }
env_logger = { workspace = true }
itertools = { workspace = true }
libc = { version = "~0" }
libloading = { version = "~0.8" }
log = { workspace = true }
prost = { workspace = true }
regex = { workspace = true }
rusqlite = { workspace = true }
sd-notify = "~0"
serde = { workspace = true, features = ["derive"] }
thiserror = { workspace = true }
tokio = { workspace = true, features = [
    "net",
    "rt-multi-thread",
    "fs",
    "signal",
    "time",
    "io-util",
] }
tokio-rusqlite = { workspace = true }
toml = "~0"
tonic = { workspace = true }
uuid = { workspace = true }


[package.metadata.generate-rpm]
name = "beegfs-mgmtd"
assets = [
    { source = "target/release/mgmtd", dest = "/opt/beegfs/sbin/beegfs-mgmtd", mode = "755" },
    { source = "assets/mgmtd.toml", dest = "/etc/beegfs/", mode = "644" },
    { source = "assets/beegfs-mgmtd.service", dest = "/etc/systemd/system/", mode = "644" },
]

[package.metadata.deb]
name = "beegfs-mgmtd"
extended-description = "The BeeGFS management daemon"
assets = [
    [
        "target/release/mgmtd",
        "/opt/beegfs/sbin/beegfs-mgmtd",
        "755",
    ],
    [
        "assets/mgmtd.toml",
        "/etc/beegfs/",
        "644",
    ],
    [
        "assets/beegfs-mgmtd.service",
        "/etc/systemd/system/",
        "644",
    ],
]
