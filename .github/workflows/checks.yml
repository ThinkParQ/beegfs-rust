name: checks

on: [pull_request]

env:
  # Cargo must use git cli for checkouts instead of builtin functionality to respect the repla
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  checks:
    runs-on: ubuntu-latest
    container:
      image: rust
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install toolchains and tools
        run: |
          rustup component add clippy
          rustup toolchain install nightly
          rustup component add --toolchain nightly rustfmt
      - name: Version info
        run: |
          rustc --version
          cargo --version
          cargo +nightly --version
      - name: Configure git
        # Make sure the runner has access to the protobuf repo using an access token
        run: git config --global url."https://${{ secrets.CI_PROTOBUF_ACCESS }}@github.com/thinkparq/protobuf".insteadOf https://github.com/thinkparq/protobuf
      - name: Check formatting
        run: cargo +nightly fmt --check
      - name: Check clippy
        run: cargo clippy -- -D warnings
      - name: Run tests
        run: cargo test
      # - name: cargo deny
      #   run: |
      #     cargo install cargo-deny
      #     cargo deny check
