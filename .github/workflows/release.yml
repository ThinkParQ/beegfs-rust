name: Create release
run-name: Create release for ${{ github.ref_name }} by @${{ github.actor }}
on:
  workflow_dispatch:
  push:
    # This should run automatically on pushing a BeeGFS version tag, but not on any others
    tags:
      - "v*.*.*"
env:
  # Cargo must use git cli for checkouts instead of builtin functionality to respect the repla
  CARGO_NET_GIT_FETCH_WITH_CLI: true
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      CARGO_LOCKED: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Important to fetch the tags
          fetch-depth: 0
      - name: Setup Rust
        uses: moonrepo/setup-rust@v1
        with:
          components: clippy
          targets: aarch64-unknown-linux-gnu
          bins: cargo-deny, cargo-about, cargo-generate-rpm, cargo-deb, cargo-zigbuild
      - name: Setup nightly toolchain and tools
        run: |
          sudo apt-get update -qq && sudo apt-get install -y gcc-aarch64-linux-gnu
          wget -q -P /tmp http://deb.debian.org/debian/pool/main/d/dpkg-sig/dpkg-sig_0.13.1+nmu4_all.deb
          sudo apt install --yes /tmp/dpkg-sig_0.13.1+nmu4_all.deb rpm gnupg2
          rustup toolchain install nightly
          rustup component add --toolchain nightly rustfmt
          # Install zig 0.13 release, needed for cargo-zigbuild (latest release doesn't work right now)
          wget https://ziglang.org/download/0.13.0/zig-linux-x86_64-0.13.0.tar.xz -qO zig.tar.xz
          mkdir -p ${HOME}/zig
          tar -xJ -C ${HOME}/zig --strip-components=1 -f zig.tar.xz
          echo ${HOME}/zig >> ${GITHUB_PATH}
      - name: Configure foreign git repos
        # Make sure the runner has access to the protobuf repo using an access token
        run: git config --global url."https://${{ secrets.CI_PROTOBUF_ACCESS }}@github.com/thinkparq/protobuf".insteadOf https://github.com/thinkparq/protobuf
      - name: Run checks and tests
        run: |
          make check
          make deny
          make test
      - name: Build x86_64 packages
        env:
          CARGO_TARGET: x86_64-unknown-linux-gnu
          GLIBC_VERSION: 2.27
        run: make package
      - name: Build aarch64 packages
        env:
          CARGO_TARGET: aarch64-unknown-linux-gnu
          BIN_UTIL_PREFIX: aarch64-linux-gnu-
          GLIBC_VERSION: 2.27
        run: make package
      - name: Generate checksums for all files
        run: |
          cd target/package
          rm -rf checksums.txt
          for file in *.rpm *.deb; do
            # Skip if it's a directory
            if [ -f "$file" ]; then
                sha256sum "$file" >> checksums.txt
            fi
          done
      - name: show checksums
        run: cat target/package/checksums.txt
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.PUBLICREPO_GPGPACKAGEKEY }}
          passphrase: ${{ secrets.PUBLICREPO_GPGPACKAGEPASSPHRASE }}
      - name: Sign checksums file
        run: |
          cd target/package
          export GPG_TTY=$(tty)
          gpg --pinentry-mode loopback --passphrase ${{ secrets.PUBLICREPO_GPGPACKAGEPASSPHRASE }} --trust-model always --detach-sign -o checksums.txt.sig -r packages@beegfs.com checksums.txt 
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "target/package/*.deb,target/package/*.rpm,target/package/checksums*"
          allowUpdates: true
          updateOnlyUnreleased: true
          removeArtifacts: true
          generateReleaseNotes: true
          draft: false
